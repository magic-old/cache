{"version":3,"sources":["src/index.js"],"names":[],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAM,aAAa,CACjB,SADiB,EAEjB,UAFiB,EAGjB,OAHiB,EAIjB,OAJiB,EAKjB,KALiB,EAMjB,MANiB,EAOjB,MAPiB,EAQjB,QARiB,EASjB,WATiB,EAUjB,SAViB,EAWjB,UAXiB,EAYjB,UAZiB,CAAb;;AAeN,IAAM,OAAO,SAAP,IAAO,GAAM,EAAN;;AAEb,IAAM,mBACJ,SADI,gBACJ,CAAC,IAAD,EAAqB;MAAd,2DAAK,oBAAS;;AACnB,6BAAY,KAAK,GAAL,EAAU,UAAC,GAAD,EAAM,KAAN,EAAgB;AACpC,QAAI,GAAJ,EAAS;AACP,aAAO,GAAG,GAAH,CAAP,CADO;KAAT;;AAIA,oBAAI,KAAJ,EAAW,iBAAX,EAA8B,UAAC,GAAD,EAAM,cAAN,EAAyB;AACrD,WAAK,KAAL,GAAa,cAAb,CADqD;AAErD,SAAG,GAAH,EAAQ,IAAR,EAFqD;KAAzB,CAA9B,CALoC;GAAhB,CAAtB,CADmB;CAArB;;AAaF,IAAM,oBACJ,SADI,iBACJ,CAAC,IAAD,EAAqB;MAAd,2DAAK,oBAAS;;AACnB,6BAAY,KAAK,GAAL,EAAU,UAAC,GAAD,EAAM,MAAN,EAAiB;AACrC,QAAI,GAAJ,EAAS;AACP,aAAO,GAAG,GAAH,CAAP,CADO;KAAT;;AAIA,oBAAI,MAAJ,EAAY,YAAZ,EAA0B,UAAC,GAAD,EAAM,eAAN,EAA0B;AAClD,WAAK,MAAL,GAAc,eAAd,CADkD;AAElD,SAAG,GAAH,EAAQ,IAAR,EAFkD;KAA1B,CAA1B,CALqC;GAAjB,CAAtB,CADmB;CAArB;;AAaF,IAAM,eACJ,SADI,YACJ,CAAC,KAAD,EAAsB;MAAd,2DAAK,oBAAS;;AACpB,oBAAQ,YAAR,CAAqB,MAAM,GAAN,EAAW,UAAC,GAAD,EAAM,KAAN,EAAgB;AAC9C,QAAI,GAAJ,EAAS;AACP,SAAG,GAAH,EADO;KAAT;;AAIA,oBAAI,KAAJ,uBAAsB,UAAC,GAAD,EAAM,KAAN,EAAgB;AACpC,YAAM,KAAN,GAAc,KAAd,CADoC;AAEpC,YAAM,IAAN,GAAa,WAAW,MAAM,GAAN,GAAY,CAAZ,CAAxB,CAFoC;AAGpC,SAAG,GAAH,EAAQ,KAAR,EAHoC;KAAhB,CAAtB,CAL8C;GAAhB,CAAhC,CADoB;CAAtB;;AAcF,IAAM,cACJ,SADI,WACJ,CAAC,KAAD,EAAsB;MAAd,2DAAK,oBAAS;;;AAEpB,kBAAI,KAAJ,EAAW,gBAAX,EAA6B,EAA7B,EAFoB;CAAtB;;AAKF,IAAM,OACJ,SADI,IACJ,GAAM;AACJ,wBAAU,qBAER,WAFQ,CAAV,EAIA,UAAC,GAAD,EAAM,KAAN,EAAgB;AACd,QAAI,GAAJ,EAAS;AACP,YAAM,GAAN,CADO;KAAT;;AAIA,qEAAqC,KAArC,EALc;AAMd,6BAAU,KAAV,EAAiB,UAAU,GAAV,EAAe;AAC9B,UAAI,GAAJ,EAAS;AACP,cAAM,GAAN,CADO;OAAT;AAGA,oCAAI,kCAAJ,EAJ8B;KAAf,CAAjB,CANc;GAAhB,CAJA,CADI;CAAN;;AAoBF","file":"index.js","sourcesContent":["import { map, waterfall } from 'async';\nimport saveHosts from './lib/saveHosts';\nimport parsePost from './lib/parsePost';\nimport getHosts from './lib/getHosts';\nimport getArchives from './lib/getArchives';\n\nimport log from 'magic-server-log';\nimport fsutils from 'magic-fs';\n\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst noop = () => {};\n\nconst getYearlyArchive =\n  (host, cb = noop) => {\n    getArchives(host.dir, (err, years) => {\n      if (err) {\n        return cb(err);\n      }\n\n      map(years, getMonthlyArchive, (err, yearlyArchives) => {\n        host.years = yearlyArchives;\n        cb(err, host);\n      });\n    });\n  };\n\nconst getMonthlyArchive =\n  (year, cb = noop) => {\n    getArchives(year.dir, (err, months) => {\n      if (err) {\n        return cb(err);\n      }\n\n      map(months, getBlogPosts, (err, monthlyArchives) => {\n        year.months = monthlyArchives;\n        cb(err, year);\n      });\n    });\n  };\n\nconst getBlogPosts =\n  (month, cb = noop) => {\n    fsutils.findSubFiles(month.dir, (err, files) => {\n      if (err) {\n        cb(err);\n      }\n\n      map(files, parsePost, (err, posts) => {\n        month.posts = posts;\n        month.name = monthNames[month.num - 1];\n        cb(err, month);\n      });\n    });\n  };\n\nconst getBlogData =\n  (hosts, cb = noop) => {\n    // ~ log(`magic-cache: getBlogData called with hosts ${JSON.stringify(hosts)}`);\n    map(hosts, getYearlyArchive, cb);\n  };\n\nconst init =\n  () => {\n    waterfall([\n      getHosts,\n      getBlogData,\n    ],\n    (err, hosts) => {\n      if (err) {\n        throw err;\n      }\n\n      log(`pre host save, hostsAsObject: ${hosts}`);\n      saveHosts(hosts, function (err) {\n        if (err) {\n          throw err;\n        }\n        log('saving hosts done, blogdata set.');\n      });\n    });\n  };\n\ninit();\n"]}